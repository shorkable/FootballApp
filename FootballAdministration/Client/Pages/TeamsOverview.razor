@page "/teamsoverview"
@using FootballAdministration.Shared
@inject HttpClient Http

<h1>Teams</h1>

<p>Here are all your teams</p>

@foreach (TeamModel team in Teams)
{
    <h3>@team.Name.ToUpper()</h3>
    <p>Team Size: @FindPlayersInTeam(team.Name).Count</p>
    <table class="table">
        <thead>
            <tr>
                <th>Player Name</th>
                <th>Date of Birth</th>
                <th>Monthly Wage</th>
                <th>Preferred Foot</th>
                <th>Jersey Number</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < FindPlayersInTeam(team.Name).Count; i++)
            {
            <tr>
                <td>@FindPlayersInTeam(team.Name)[i].GetFullName()</td>
                <td>@FindPlayersInTeam(team.Name)[i].GetBirthDate()</td>
                <td>@FindPlayersInTeam(team.Name)[i].MonthlyWage</td>
                <td>@FindPlayersInTeam(team.Name)[i].PreferredFoot</td>
                <td>@FindPlayersInTeam(team.Name)[i].JerseyNumber</td>
            </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<PlayerModel> Players = new List<PlayerModel>();
    private List<TeamModel> Teams = new List<TeamModel>();

    //Populate the two lists with the data from the DB
    protected override async Task OnInitializedAsync()
    {
        Players = await Http.GetFromJsonAsync<List<PlayerModel>>("Player");
        Teams = await Http.GetFromJsonAsync<List<TeamModel>>("Team");
    }

    //Method that finds and returns a list of players which are in the team that is given as a parameter 
    private List<PlayerModel> FindPlayersInTeam(string teamName)
    {
        //Define the list that will later be used
        List<PlayerModel> PlayersInTeam = new List<PlayerModel>();

        //Adding the players to the above list, if their TeamName attribute matches the teamName parameter of this method
        foreach (PlayerModel player in Players)
        {
            if (player.TeamName == teamName)
            {
                PlayersInTeam.Add(player);
            }
        }
        return PlayersInTeam;
    }
}
